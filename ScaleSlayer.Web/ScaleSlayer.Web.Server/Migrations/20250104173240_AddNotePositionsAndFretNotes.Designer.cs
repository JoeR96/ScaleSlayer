// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ScaleSlayer.Infrastructure.Persistence;

#nullable disable

namespace ScaleSlayer.Web.Server.Migrations
{
    [DbContext(typeof(ScaleSlayerDbContext))]
    [Migration("20250104173240_AddNotePositionsAndFretNotes")]
    partial class AddNotePositionsAndFretNotes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ScaleSlayer.Domain.Common.Entities.FretNote", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("NotePositionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("NotePositionId")
                        .IsUnique();

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("ScaleSlayer.Domain.Common.Entities.NotePosition", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("FretNumber")
                        .HasColumnType("integer");

                    b.Property<int>("StringNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("NotePositions");
                });

            modelBuilder.Entity("ScaleSlayer.Domain.UserAggregate.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("55c7e528-2ce9-469f-91da-905e2e28b625"),
                            Email = "lincoln.abraham@example.com",
                            FirstName = "Abraham",
                            LastName = "Lincoln",
                            Password = "AQAAAAIAAYagAAAAEIvk0o3fyi9IYrgg5BCB9GHqSF34mX07Fb0uk9pEL683xuOvdnescw1Z1tQzmmAoyg==",
                            UserName = "alincoln"
                        },
                        new
                        {
                            Id = new Guid("a6041006-0234-4e91-86e9-5431c06467f0"),
                            Email = "caesar.julius@example.com",
                            FirstName = "Julius",
                            LastName = "Caesar",
                            Password = "AQAAAAIAAYagAAAAEDT4DO0USMOK+4u4kzewVYPVFiIDy4/xGncBe6Un/osF0iiTGgI2GsaxtwlvgiEv5w==",
                            UserName = "jcaesar"
                        },
                        new
                        {
                            Id = new Guid("84f1353d-31f1-4bc4-922f-73ad505358f5"),
                            Email = "einstein.albert@example.com",
                            FirstName = "Albert",
                            LastName = "Einstein",
                            Password = "AQAAAAIAAYagAAAAECsVp4YCVud455hsgm+vy2xcwTRxU+olRccAskq+qErnDdyoPHAiHgXSvzXutK1aXw==",
                            UserName = "aeinstein"
                        },
                        new
                        {
                            Id = new Guid("1283d0c0-4772-4c6a-81cb-d02276e602be"),
                            Email = "curie.marie@example.com",
                            FirstName = "Marie",
                            LastName = "Curie",
                            Password = "AQAAAAIAAYagAAAAEKkdaAgOGv1ytVKhpcoQN90PyqtYTOSFDx+T7SNDzYRGVFJchWq/PuHuFqK3D0Z9kw==",
                            UserName = "mcurie"
                        },
                        new
                        {
                            Id = new Guid("ef2c643e-123f-436a-b0c8-b552a5ba2e9c"),
                            Email = "davinci.leonardo@example.com",
                            FirstName = "Leonardo",
                            LastName = "da Vinci",
                            Password = "AQAAAAIAAYagAAAAEFWnl5wrNB1BgbXNb22P0lPiwigk4XU/nNCBcToWWrw486u0FcaKTpv/RtgIAwwEgA==",
                            UserName = "ldavinci"
                        },
                        new
                        {
                            Id = new Guid("41828461-db19-41e7-8186-ee43f6416415"),
                            Email = "shakespeare.william@example.com",
                            FirstName = "William",
                            LastName = "Shakespeare",
                            Password = "AQAAAAIAAYagAAAAEA74e9UpRhlQsDlCNDItBrY8nKpMPXR9EGNtZnWi916/usaaxoMW6JJ+CBBFoYkXrA==",
                            UserName = "wshakespeare"
                        },
                        new
                        {
                            Id = new Guid("24e41bc9-f5a8-4c33-9a24-20093eaf0e93"),
                            Email = "cleopatra@example.com",
                            FirstName = "Cleopatra",
                            LastName = "",
                            Password = "AQAAAAIAAYagAAAAECJBnhmuyaqh5RWA5Unn8uYvMmILirEn+j7SWi7978rKBsTDpRkPQbeVy1DXl15M+Q==",
                            UserName = "ccleopatra"
                        },
                        new
                        {
                            Id = new Guid("014b06d9-d521-46d5-b9ca-a0c13af259b0"),
                            Email = "alexander@example.com",
                            FirstName = "Alexander",
                            LastName = "the Great",
                            Password = "AQAAAAIAAYagAAAAEFm2RudBYlc2fnF3E1Rh+1g4iav/4UR1o1dGyt+ZE+FNK2t/emhNsOdB58gclujudg==",
                            UserName = "aalexander"
                        },
                        new
                        {
                            Id = new Guid("04dc762f-2a9d-40ce-86db-0f11212e74e5"),
                            Email = "tesla.nikola@example.com",
                            FirstName = "Nikola",
                            LastName = "Tesla",
                            Password = "AQAAAAIAAYagAAAAEHLVBmhEkrrseBi/utLGj76AH40VjwSa7KvWh/vGQBPu3dVMy/IIMhyjzhOHyTsBuA==",
                            UserName = "ntesla"
                        },
                        new
                        {
                            Id = new Guid("b2e83682-6ed8-491f-8aa2-d8180287d65b"),
                            Email = "genghis.khan@example.com",
                            FirstName = "Genghis",
                            LastName = "Khan",
                            Password = "AQAAAAIAAYagAAAAENBU7nkOPg/DfUlHCALP9pi6Y7u7J5kM2dftGQ6zujEsSwd79dhZhQEcJGz77zL0uQ==",
                            UserName = "wgenghis"
                        });
                });

            modelBuilder.Entity("ScaleSlayer.Domain.Common.Entities.FretNote", b =>
                {
                    b.HasOne("ScaleSlayer.Domain.Common.Entities.NotePosition", "NotePosition")
                        .WithOne()
                        .HasForeignKey("ScaleSlayer.Domain.Common.Entities.FretNote", "NotePositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotePosition");
                });
#pragma warning restore 612, 618
        }
    }
}
